<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>