<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pab5f0mvCj3ashDgAAAAAElFTkSuQmCC
</value>
  </data>
</root>